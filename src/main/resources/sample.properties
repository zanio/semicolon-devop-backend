spring.profiles.active=ACTIVE PROFILE FOR APPLICATION TO RUN ON
spring.application.name=APPLICATION NAME

# Hibernate properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = false
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true

spring.jackson.serialization.fail-on-empty-beans=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dia

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

server.port=5151

#Email configuration
spring.mail.host=
spring.mail.port=
spring.mail.username=
spring.mail.password=
spring.sendgrid.api-key=
spring.mail.properties.mail.smtp.auth=
spring.mail.properties.mail.smtp.starttls.enable=
spring.mail.properties.mail.transport.protocol=
email.sender=
# Implement github authentication by providing the access_token
spring.security.oauth2.client.registration.github

#Cloudinary configuration
cloudinary.cloud_name=
cloudinary.api_key=
cloudinary.api_secret=


#Super Admin Configuration: You would need to first insert a super admin into the application, see the db/insert_superadmin
application.role =

#Root Url for Github integration:
url.github=
auth.id=

#swagger configuration
springdoc.api-docs.path=

#email validation client url
client.dev.url=
client.prod.url=
application.email1=
application.email2=
application.password1 =
application.password2 =

spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

