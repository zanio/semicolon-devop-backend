spring.profiles.active=${ACTIVE_PROFILE}
spring.application.name=${APPLICATION_NAME}

# Hibernate properties
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = false
#spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true

spring.jackson.serialization.fail-on-empty-beans=false

# The SQL dialect makes Hibernate generate better SQL for the chosen database
#spring.jpa.properties.hibernate.dialect = org.hibernate.dia

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type=TRACE

server.port=5151

#Email configuration
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.sendgrid.api-key=${SENDGRID_API_KEY}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.transport.protocol=smtp
email.sender=a.akpan@semicolon.africa
# Implement github authentication by providing the access_token
spring.security.oauth2.client.registration.github

#Cloudinary configuration
cloudinary.cloud_name=${CLOUDINARY_NAME}
cloudinary.api_key=${CLOUDINARY_API_KEY}
cloudinary.api_secret=${CLOUDINARY_SECRET_KEY}


#Super Admin Configuration: You would need to first insert a super admin into the application, see the db/insert_superadmin
application.role = SUPER_ADMIN

#Root Url for Github integration:
url.github=${GITHUB_OAUTH_URL}
auth.id=${GITHUB_OAUTH_ID}
github.auth.url=${GITHUB_AUTH_URL}


#swagger configuration
springdoc.api-docs.path=/api-docs

#email validation client url
client.dev.url=http://localhost:8080
client.prod.url=https://semicolon-ds-suite.herokuapp.com
application.email1=aniefiok@gmail.com
application.email2=semicolondevop@gmail.com
application.password1 = Password1$
application.password2 = Password1$

spring.servlet.multipart.max-file-size=15MB
spring.servlet.multipart.max-request-size=15MB

#Jenkins
jenkins.auth=${JENKINS_CREDENTIALS}
jenkins.url=${JENKINS_URL}

